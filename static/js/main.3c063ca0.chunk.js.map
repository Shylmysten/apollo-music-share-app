{"version":3,"sources":["components/Header.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Header","classes","AppBar","color","position","Toolbar","HeadsetTwoTone","Typography","className","variant","component","ADD_OR_REMOVE_FROM_QUEUE","gql","DELETE_SONG","ADD_SONG","container","display","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","artist","AddSong","useMutation","addSong","error","React","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","handleChangeSong","event","target","name","value","prevSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundCloudInfo","variables","length","console","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","SoundCloudPlayer","canPlay","YouTubePlayer","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","onChangeCapture","placeholder","type","InputProps","startAdornment","InputAdornment","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","GET_SONGS","songInfoContainer","songInfo","justifyContent","height","objectFit","backgroundSize","backgroundRepeat","backgroundPosition","flex","Song","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","deleteSong","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","id","window","confirm","log","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","payload","size","Pause","PlayArrow","input","__typename","Save","handleDeleteSong","Delete","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","QueuedSongList","queue","greaterThanMd","useMediaQuery","breakpoints","up","i","GET_QUEUED_SONGS","details","padding","content","controls","paddingLeft","paddingRight","playIcon","SongPlayer","seconds","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPosistionInQueue","songIndex","findIndex","nextSong","compenent","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initalSongState","useReducer","greaterThanSm","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","createTheme","palette","primary","teal","secondary","purple","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","ApolloProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.3c063ca0.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\nimport { HeadsetTwoTone } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        marginLeft: theme.spacing(3)\n    }\n}))\n\nfunction Header() {\n    const classes = useStyles();\n\n    return (\n        <AppBar color=\"primary\" position='fixed'>\n            <Toolbar>\n                <HeadsetTwoTone/>\n                <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n                    Apollo Music Share\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import { gql } from \"apollo-boost\";\n\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n  mutation addOrRemoveFromQueue($input: SongInput!) {\n    addOrRemoveFromQueue(input: $input) @client\n  }\n`\n\nexport const DELETE_SONG = gql`\nmutation deleteSong($id: uuid!) {\n  delete_songs(where: {id: {_eq: $id}}) {\n    returning {\n      id\n      duration\n      create_at\n      artist\n      thumbnail\n      title\n      url\n    }\n  }\n}`\n\nexport const ADD_SONG = gql`\nmutation addSong(\n  $title: String!, \n  $artist: String!, \n  $thumbnail: String!, \n  $duration: Float!, \n  $url: String!\n  ) {\n    insert_songs(\n      objects: {\n        title: $title, \n        artist: $artist, \n        thumbnail: $thumbnail, \n        duration: $duration, \n        url: $url\n      }\n    ) {\n      affected_rows\n    }\n  }`","import React from \"react\";\nimport { Button, \n    Dialog, \n    DialogActions, \n    DialogContent, \n    DialogTitle, \n    InputAdornment, \n    TextField,\n    makeStyles\n } from \"@material-ui/core\";\nimport { AddBoxOutlined, Link } from '@material-ui/icons';\nimport ReactPlayer from \"react-player\";\nimport SoundCloudPlayer from \"react-player/soundcloud\";\nimport YouTubePlayer from \"react-player/youtube\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADD_SONG } from \"../graphql/mutations\";\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    urlInput: {\n        margin: theme.spacing(1)\n    },\n    addSongButton: {\n        margin: theme.spacing(1)\n    },\n    dialog: {\n        textAlign: 'center'\n    },\n    thumbnail: {\n        width: '90%'\n    }\n}))\n\nconst DEFAULT_SONG = {\n    duration: 0,\n    title: '',\n    artist: '',\n    thumbnail: ''\n}\n\nfunction AddSong() {\n    const classes = useStyles();\n    const [addSong, { error }] = useMutation(ADD_SONG);\n    const [url, setUrl] = React.useState('');\n    const [playable, setPlayable] = React.useState(false);\n    const [dialog, setDialog] = React.useState(false);\n    const [song, setSong] = React.useState(DEFAULT_SONG);\n\n    // when the [url] state changes, check to see if the link is a valid SoundCloud or Youtube link\n    React.useEffect(() => {\n        const isPlayable = SoundCloudPlayer.canPlay(url) || YouTubePlayer.canPlay(url)\n        setPlayable(isPlayable);\n    }, [url])\n\n    function handleChangeSong(event) {\n        const { name, value } = event.target\n        setSong(prevSong => ({\n            ...prevSong,\n            [name]: value\n        }))\n    }\n\n    function handleCloseDialog() {\n        setDialog(false);\n    }\n\n    async function handleEditSong({ player }) {\n        const nestedPlayer = player.player.player;\n        let songData;\n        if(nestedPlayer.getVideoData) {\n            songData = getYoutubeInfo(nestedPlayer);\n        } else if(nestedPlayer.getCurrentSound) {\n            songData = await getSoundCloudInfo(nestedPlayer);\n        }\n        setSong({ ...songData, url })\n    }\n\n    async function handleAddSong() {\n        try {\n            const { url, thumbnail, duration, title, artist } = song;\n        \n            await addSong({\n               variables: {\n                   url: url.length > 0 ? url : null,\n                   thumbnail: thumbnail.length > 0 ? thumbnail : null,\n                   duration: duration > 0 ? duration : null,\n                   title: title.length > 0 ? title : null,\n                   artist: artist.length > 0 ? artist : null\n               }\n           })\n           handleCloseDialog();\n           setSong(DEFAULT_SONG);\n           setUrl('');\n        } catch (error) {\n            console.error(\"Error adding song\", error);\n        }\n\n    }\n\n    function getYoutubeInfo(player) {\n        const duration = player.getDuration();\n        const { title, video_id, author } = player.getVideoData();\n        const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n        return {\n            duration,\n            title,\n            artist: author,\n            thumbnail\n        }\n    }\n\n    function getSoundCloudInfo(player) {\n        return new Promise(resolve => {\n            player.getCurrentSound(songData => {\n                if(songData) {\n                    resolve({\n                        duration: Number(songData.duration / 1000),\n                        title: songData.title,\n                        artist: songData.user.username,\n                        thumbnail: songData.artwork_url.replace('-large', '-t500x500')\n                    });\n                }\n            })\n        })\n\n    }\n\n    function handleError(field) {\n        return error && error.graphQLErrors[0].extensions.path.includes(field);\n    }\n\n    const { thumbnail, title, artist } = song;\n\n    return (\n        <div className={classes.container}>\n            <Dialog\n                className={classes.dialog}\n                open={dialog}\n                onClose={handleCloseDialog}\n            >\n                <DialogTitle>Edit Song</DialogTitle>\n                <DialogContent>\n                    <img \n                        className={classes.thumbnail}\n                        src={thumbnail} \n                        alt=\"Song Thumbnail\"\n                    />\n                    <TextField \n                        value={title}\n                        onChange={handleChangeSong}\n                        margin=\"dense\"\n                        name=\"title\"\n                        label=\"Title\"\n                        fullWidth\n                        error={handleError('title')}\n                        helperText={handleError('title') && \"Fill out field\"}\n                    />\n                    <TextField \n                        value={artist}\n                        onChange={handleChangeSong}\n                        margin=\"dense\"\n                        name=\"artist\"\n                        label=\"Artist\"\n                        fullWidth\n                        error={handleError('artist')}\n                        helperText={handleError('artist') && \"Fill out field\"}\n                    />\n                    <TextField \n                        value={thumbnail}\n                        onChange={handleChangeSong}\n                        margin=\"dense\"\n                        name=\"thumbnail\"\n                        label=\"Thumbnail\"\n                        fullWidth\n                        error={handleError('thumbnail')}\n                        helperText={handleError('thumbnail') && \"Fill out field\"}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialog} color=\"secondary\">Cancel</Button>\n                    <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">Add Song</Button>\n                </DialogActions>\n            </Dialog>\n            <TextField\n                className={classes.urlInput}\n                onChangeCapture={event => setUrl(event.target.value)}\n                value={url}\n                placeholder=\"Add YouTube or Soundcloud Url\"\n                fullWidth\n                margin=\"normal\"\n                type=\"url\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <Link />\n                        </InputAdornment>\n                    )\n                }}\n            />\n            <Button\n                disabled={!playable}\n                className={classes.addSongButton}\n                onClick={() => setDialog(true)}\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={<AddBoxOutlined />}\n            >\n                Add\n            </Button>\n            <ReactPlayer url={url} hidden onReady={handleEditSong} />\n        </div>\n    )\n}\n\nexport default AddSong;","import { gql } from \"apollo-boost\";\n\nexport const GET_SONGS = gql`\nsubscription getSongs {\n    songs(order_by: {create_at: desc}) {\n      artist\n      duration\n      id\n      thumbnail\n      title\n      url\n    }\n  }`","import React from \"react\";\nimport { \n    Card, \n    CardActions, \n    CardContent, \n    CardMedia, \n    CircularProgress, \n    IconButton, \n    Typography,\n    makeStyles\n} from \"@material-ui/core\";\nimport { Delete, Pause, PlayArrow, Save } from \"@material-ui/icons\";\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport { SongContext } from \"../App\";\nimport { ADD_OR_REMOVE_FROM_QUEUE, DELETE_SONG } from \"../graphql/mutations\";\n\nfunction SongList() {\n    const { data, loading, error } = useSubscription(GET_SONGS);\n\n    // const song = {\n    //     title: \"LUNE\",\n    //     artist: \"MOON\",\n    //     thumbnail: \"https://source.unsplash.com/random/500x500\" \n    // }\n\n    if (loading) {\n        return (\n            <div style={{ \n                display: \"flex\", \n                flexDirection: 'column',\n                alignItems: 'center',\n                marginTop: 50\n            }}>\n                <CircularProgress/>\n            </div>\n        )\n    }\n    if (error) return <div>Error fetching songs</div>\n\n\n    return <div>{data.songs.map(song => (\n        <Song key={song.id} song={song}/>\n    ))}</div>\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: theme.spacing(3)\n    },\n    songInfoContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    songInfo: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    thumbnail: {\n        width: 140,\n        height: 140,\n        objectFit: 'cover',\n        display: 'block',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top left',\n        flex: '1 0 auto'\n    }\n}))\nfunction Song({ song }) {\n    const classes = useStyles();\n    const [addOrRemoveFromQueue, ] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n        onCompleted: data => {\n            localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue));\n        }\n    });\n    const [deleteSong] = useMutation(DELETE_SONG);\n    const { state, dispatch } = React.useContext(SongContext)\n    const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n    const { thumbnail, artist, title, id } = song;\n\n    React.useEffect(() => {\n        const isSongPlaying = state.isPlaying && id === state.song.id;\n        setCurrentSongPlaying(isSongPlaying)\n    }, [id, state.song.id, state.isPlaying]);\n\n    function handleTogglePlay() {\n        dispatch({ type: 'SET_SONG', payload: { song }})\n        dispatch(state.isPlaying ? { type: 'PAUSE_SONG' } : { type: 'PLAY_SONG'});\n    }\n\n    function handleAddOrRemoveFromQueue() {\n        addOrRemoveFromQueue({\n            variables: {input: {...song, __typename: 'Song'}}\n        })\n    }\n\n    async function handleDeleteSong({ id }) {\n        const isConfirmed = window.confirm('Do you want to remove this song from your music library?');\n        if (isConfirmed) {\n            const data = await deleteSong( { variables: { id }});\n            console.log('deleted song', data);\n        }\n    }\n\n    return (\n        <Card className={classes.container}>\n            <div className={classes.songInfoContainer}>\n                <CardMedia image={thumbnail} className={classes.thumbnail}/>\n                <div className={classes.songInfo}>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n                            {artist}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\n                            {currentSongPlaying ? <Pause/> : <PlayArrow  />}\n                        </IconButton>\n                        <IconButton onClick={handleAddOrRemoveFromQueue} size=\"small\" color=\"secondary\">\n                            <Save/>\n                        </IconButton>\n                        <IconButton onClick={() => handleDeleteSong(song)} size=\"small\">\n                            <Delete color=\"error\" />\n                        </IconButton>\n                    </CardActions>\n                </div>\n            </div>\n        </Card>\n    )\n}\n\nexport default SongList;","import React from \"react\";\nimport { \n    Avatar, \n    IconButton, \n    Typography,\n    makeStyles, \n    useMediaQuery\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\n\n\n\nfunction QueuedSongList({ queue }) {\n    const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n\n    // const song = {\n    //     title: \"LUNE\",\n    //     artist: \"MOON\",\n    //     thumbnail: \"https://source.unsplash.com/random/500x500\" \n    // }\n\n\n    return  greaterThanMd && (\n        <div style={{ margin: '10px 0' }}>\n            <Typography color=\"textSecondary\" variant=\"button\">\n                QUEUE ({queue.length})\n            </Typography>\n            {queue.map((song,i) => (\n                <QueuedSong key={i} song={song}/>\n            ))}\n        </div>\n    )\n}\n\nconst  useStyles = makeStyles({\n    avatar: {\n        width: 44,\n        height: 44\n    },\n    text: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden'\n    },\n    container: {\n        display: 'grid',\n        gridAutoFlow: 'column',\n        gridTemplateColumns: '50px auto 50px',\n        gridGap: 12,\n        alignItems: 'center',\n        marginTop: 10\n    },\n    songInfoContainer: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n    }\n})\n\nfunction QueuedSong({ song }) {\n    const classes = useStyles();\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n        onCompleted: data => {\n            localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue));\n        }\n    });\n    const { thumbnail, artist, title } = song;\n\n\n    function handleAddOrRemoveFromQueue() {\n        addOrRemoveFromQueue({\n            variables: {input: {...song, __typename: 'Song'}}\n        })\n    }\n\n    return (\n        <div className={classes.container}>\n            <Avatar className={classes.avatar} src={thumbnail} alt=\"Song Thumbnail\"/>\n            <div className={classes.songInfoContainer}>\n                <Typography variant=\"subtitle2\" className={classes.text}>\n                    {title}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\" className={classes.text}>\n                    {artist}\n                </Typography>\n            </div>\n            <IconButton onClick={handleAddOrRemoveFromQueue}>\n                <Delete color=\"error\"/>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default QueuedSongList;","import { gql } from \"apollo-boost\";\n\nexport const GET_QUEUED_SONGS = gql`\n    query getQueuedSongs {\n        queue @client {\n            id\n            duration\n            title\n            artist\n            thumbnail\n            url\n        }\n    }\n`","import React from \"react\";\nimport QueuedSongList from \"./QueuedSongList\";\nimport { \n    Card, \n    CardContent, \n    CardMedia, \n    IconButton, \n    Slider, \n    Typography,\n    makeStyles\n} from \"@material-ui/core\";\nimport { Pause, PlayArrow, SkipNext, SkipPrevious } from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\nimport ReactPlayer from \"react-player\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0px 15px'\n    },\n    content: {\n        flex: '1 0 auto'\n    },\n    thumbnail: {\n        width: 182\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    playIcon: {\n        width: 38,\n        height: 38\n    }\n}))\n\nfunction SongPlayer() {\n    const { data } = useQuery(GET_QUEUED_SONGS);\n    const reactPlayerRef = React.useRef();\n    const { state, dispatch } = React.useContext(SongContext);\n    const [played, setPlayed] = React.useState(0);\n    const [playedSeconds, setPlayedSeconds] = React.useState(0);\n    const [seeking, setSeeking] = React.useState(false);\n    const [positionInQueue, setPosistionInQueue] = React.useState(0);\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        const songIndex = data.queue.findIndex(song => song.id === state.song.id);\n        setPosistionInQueue(songIndex);\n    }, [data.queue, state.song.id]);\n\n    React.useEffect(() => {\n       const nextSong = data.queue[positionInQueue + 1]\n       if(played >= 0.99 && nextSong) {\n           setPlayed(0);\n           dispatch({ type: \"SET_SONG\", payload: { song: nextSong }});\n       }\n    }, [ data.queue, played, dispatch, positionInQueue ]);\n\n    function handleTogglePlay() {\n        dispatch(state.isPlaying ? { type: 'PAUSE_SONG' } : { type: 'PLAY_SONG'});\n    }\n\n    function handleProgressChange(event, newValue) {\n        setPlayed(newValue);\n    }\n\n    function handleSeekMouseDown() {\n        setSeeking(true);\n    }\n    function handleSeekMouseUp() {\n        setSeeking(false);\n        reactPlayerRef.current.seekTo(played);\n    }\n\n    function formatDuration(seconds) {\n        return new Date(seconds * 1000).toISOString().substr(11,8);\n    }\n\n    function handlePlayNextSong() {\n        const nextSong = data.queue[positionInQueue + 1]\n        if(nextSong) {\n            dispatch({ type: \"SET_SONG\", payload: { song: nextSong }});\n        }\n    }\n\n    function handlePlayPrevSong() {\n        const prevSong = data.queue[positionInQueue - 1];\n        if(prevSong) {\n            dispatch({ type: \"SET_SONG\", payload: { song: prevSong }});\n        }\n    }\n\n    return (\n        <>\n           <Card variant=\"outlined\" className={classes.container}>\n               <div className={classes.details}>\n                   <CardContent className={classes.content}>\n                       <Typography variant=\"h5\" compenent=\"h3\">\n                           {state.song.title}\n                       </Typography>\n                       <Typography variant=\"subtitle1\" compenent=\"p\" color=\"textSecondary\">\n                           {state.song.artist}\n                       </Typography>\n                   </CardContent>\n                   <div className={classes.controls}>\n                       <IconButton onClick={handlePlayPrevSong}>\n                           <SkipPrevious/>\n                       </IconButton>\n                       <IconButton onClick={handleTogglePlay}>\n                          {state.isPlaying ? <Pause className={classes.playIcon}/> : <PlayArrow className={classes.playIcon}/>}\n                       </IconButton>\n                       <IconButton onClick={handlePlayNextSong}>\n                           <SkipNext/>\n                       </IconButton>\n                       <Typography variant=\"subtitle1\" compenent=\"p\" color=\"textSecondary\">\n                           {formatDuration(playedSeconds)}\n                       </Typography>\n                   </div>\n                   <Slider \n                        onMouseDown={handleSeekMouseDown}\n                        onMouseUp={handleSeekMouseUp}\n                        onChange={handleProgressChange}\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.01}\n                        value={played}\n                   />\n                </div>\n                <ReactPlayer \n                    ref={reactPlayerRef}\n                    onProgress={({ played, playedSeconds}) => {\n                        if(!seeking) {\n                            setPlayed(played);\n                            setPlayedSeconds(playedSeconds);\n                        }\n                    }}\n                    url={state.song.url} \n                    playing={state.isPlaying} hidden\n                />\n                <CardMedia\n                    className={classes.thumbnail}\n                    image={state.song.thumbnail}\n                />\n           </Card>\n            <QueuedSongList queue={data.queue}/>\n        </>\n    );\n}\n\nexport default SongPlayer;","function songReducer(state, action) {\n    switch (action.type) {\n        case \"PLAY_SONG\": {\n            return {\n                ...state,\n                isPlaying: true\n            }\n        }\n        case \"PAUSE_SONG\": {\n            return {\n                ...state,\n                isPlaying: false\n            }\n        }\n        case \"SET_SONG\": {\n            return {\n                ...state, \n                song: action.payload.song\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default songReducer;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport AddSong from \"./components/AddSong\";\nimport SongList from \"./components/SongList\";\nimport SongPlayer from \"./components/SongPlayer\";\nimport { Grid, useMediaQuery, Hidden } from '@material-ui/core';\nimport songReducer from \"./reducer\";\n\nexport const SongContext = React.createContext({\n  song: {\n    id: 'f8040162-1565-42df-ad95-bb1a96ccc1b5',\n    title: 'Mine All Mine',\n    artist: 'Van Halen',\n    thumbnail: 'http://img.youtube.com/vi/IVH7mHldMOo/0.jpg',\n    url: 'https://www.youtube.com/watch?v=IVH7mHldMOo',\n    duration: 315\n  },\n  isPlaying: false\n})\n\n\nfunction App() {\n  const initalSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(songReducer, initalSongState);\n  const greaterThanSm = useMediaQuery(theme => theme.breakpoints.up('sm'));\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n  return (\n     <SongContext.Provider value={{ state, dispatch}}>\n     <Hidden only=\"xs\">\n        <Header />\n     </Hidden>\n        <Grid container spacing={3}>\n          <Grid style={{\n            paddingTop: greaterThanSm ? 80 : 10\n          }} item xs={12} md={7}>\n            <AddSong />\n            <SongList />\n          </Grid>\n          <Grid style={ greaterThanMd ? {\n            position: 'fixed',\n            width: '100%',\n            right: 0,\n            top: 70\n          } : {\n            position: 'fixed',\n            width: '100%',\n            left: 0,\n            bottom: 0\n          }} item xs={12} md={5}>\n            <SongPlayer />\n          </Grid>\n        </Grid>\n     </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { createTheme } from \"@material-ui/core/styles\";\nimport { teal, purple } from '@material-ui/core/colors';\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n        primary: teal,\n        secondary: purple\n    }\n})\n\nexport default theme;","import ApolloClient from \"apollo-client\";\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { gql } from \"apollo-boost\";\nimport { GET_QUEUED_SONGS } from \"./queries\";\n\nconst client = new ApolloClient({\n    link: new WebSocketLink({\n        uri: 'wss://apollo-music-share-build.herokuapp.com/v1/graphql',\n        options: {\n            reconnect: true\n        }\n    }),\n    cache: new InMemoryCache(),\n    typeDefs: gql`\n    type Song {\n        id: uuid!\n        title: String!\n        artist: String!\n        thumbnail: String!\n        url: String!\n        duration: Float!\n    }\n\n    input SongInput {\n        id: uuid!\n        title: String!\n        artist: String!\n        thumbnail: String!\n        url: String!\n        duration: Float!\n    }\n\n    type Query {\n        queue: [Song]!\n    }\n\n    type Mutation {\n        addOrRemoveFromQueue(input: SongInput!): [Song]!\n    }\n    `,\n    resolvers: {\n        Mutation: {\n            addOrRemoveFromQueue: (_,{ input }, { cache }) => {\n                const queryResult = cache.readQuery({\n                    query: GET_QUEUED_SONGS\n                })\n                if (queryResult) {\n                    const { queue } = queryResult;\n                    const isInQueue = queue.some(song => song.id === input.id);\n                    const newQueue = isInQueue ? queue.filter(song => song.id !== input.id) : [...queue, input];\n                    cache.writeQuery({\n                        query: GET_QUEUED_SONGS,\n                        data: { queue: newQueue }\n                    })\n                    return newQueue;\n                }\n                return [];\n            }\n        }\n    }\n});\n\nconst hasQueue = Boolean(localStorage.getItem('queue'));\n\nconst data = {\n    queue: hasQueue ? JSON.parse(localStorage.getItem('queue')) : []\n}\n\n// const client = new ApolloClient({\n//     uri: 'https://apollo-music-share-build.herokuapp.com/v1/graphql'\n// })\n\nclient.writeData({ data });\n\nexport default client;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport theme from './theme';\nimport client from './graphql/client';\n\nReactDOM.render(\n  \n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}